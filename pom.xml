<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>yk</groupId>
    <artifactId>Swagger2Markup</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>1.8</java.version>
        <swagger2markup.version>1.2.0</swagger2markup.version>
        <asciidoctor.input.directory>${project.basedir}/src/asciidoc</asciidoctor.input.directory>
        <doc.output.dir>${project.basedir}/doc</doc.output.dir>
        <doc.base.style>${project.basedir}/src/style</doc.base.style>
        <swagger.project.name>default</swagger.project.name>
        <swagger.project.url>http://172.16.0.131:3005</swagger.project.url>
        <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
        <generated.asciidoc.directory>${project.build.directory}/asciidoc/generated</generated.asciidoc.directory>
        <asciidoctor.html.output.directory>${doc.output.dir}/html</asciidoctor.html.output.directory>
        <asciidoctor.pdf.output.directory>${doc.output.dir}/pdf</asciidoctor.pdf.output.directory>
    </properties>

    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.4</version>
            </extension>
        </extensions>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>io.github.swagger2markup</groupId>-->
<!--                <artifactId>swagger2markup-maven-plugin</artifactId>-->
<!--                <version>${swagger2markup.version}</version>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>io.github.swagger2markup</groupId>-->
<!--                        <artifactId>swagger2markup</artifactId>-->
<!--                        <version>${swagger2markup.version}</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash;本地 swagger.json 路径 或 远程访问地址&ndash;&gt;-->
<!--                    <swaggerInput>${swagger.project.url}/v2/api-docs</swaggerInput>-->
<!--                    &lt;!&ndash; 输出目录 &ndash;&gt;-->
<!--                    <outputDir>${generated.asciidoc.directory}</outputDir>-->
<!--                    <config>-->
<!--                        &lt;!&ndash;设置输出文件的语言：ASCIIDOC, MARKDOWN, CONFLUENCE_MARKUP&ndash;&gt;-->
<!--                        <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>-->
<!--                        &lt;!&ndash;设置目录的展现方式&ndash;&gt;-->
<!--                        <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>-->
<!--                    </config>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>compile</phase>-->
<!--                        <goals>-->
<!--                            <goal>convertSwagger2markup</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.asciidoctor</groupId>-->
<!--                <artifactId>asciidoctor-maven-plugin</artifactId>-->
<!--                <version>1.5.6</version>-->

<!--                &lt;!&ndash; Include Asciidoctor PDF for pdf generation &ndash;&gt;-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>org.asciidoctor</groupId>-->
<!--                        <artifactId>asciidoctorj-pdf</artifactId>-->
<!--                        <version>1.5.0-alpha.16</version>-->
<!--                    </dependency>-->
<!--                    &lt;!&ndash; Comment this section to use the default jruby artifact provided by the plugin &ndash;&gt;-->
<!--                    <dependency>-->
<!--                        <groupId>org.jruby</groupId>-->
<!--                        <artifactId>jruby-complete</artifactId>-->
<!--                        <version>1.7.21</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->

<!--                &lt;!&ndash; Configure generic document generation settings &ndash;&gt;-->
<!--                <configuration>-->
<!--                    &lt;!&ndash;默认指向 ${basedir}/src/main/asciidoc&ndash;&gt;-->
<!--                    <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>-->
<!--                    &lt;!&ndash;an override to process a single source file; 默认指向 ${sourceDirectory} 中的所有文件&ndash;&gt;-->
<!--                    <sourceDocumentName>index.adoc</sourceDocumentName>-->
<!--                    <attributes>-->
<!--                        <doctype>book</doctype>-->
<!--                        <toc>left</toc>-->
<!--                        <toclevels>3</toclevels>-->
<!--                        <numbered></numbered>-->
<!--                        <hardbreaks></hardbreaks>-->
<!--                        <sectlinks></sectlinks>-->
<!--                        <sectanchors></sectanchors>-->
<!--                        &lt;!&ndash;用于index.adoc中的变量generated&ndash;&gt;-->
<!--                        <generated>${generated.asciidoc.directory}</generated>-->
<!--                    </attributes>-->
<!--                </configuration>-->
<!--                &lt;!&ndash; Since each execution can only handle one backend, run-->
<!--                     separate executions for each desired output type &ndash;&gt;-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>output-html</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>process-asciidoc</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <backend>html5</backend>-->
<!--                            <outputFile>${asciidoctor.html.output.directory}/${swagger.project.name}.html</outputFile>-->
<!--                            <sourceHighlighter>coderay</sourceHighlighter>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                    <execution>-->
<!--                        <id>output-pdf</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>process-asciidoc</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <backend>pdf</backend>-->
<!--                            <outputFile>${asciidoctor.pdf.output.directory}/${swagger.project.name}.pdf</outputFile>-->
<!--                            <sourceHighlighter>coderay</sourceHighlighter>-->
<!--                            <doctype>book</doctype>-->
<!--                            <attributes>-->
<!--                                <toc>left</toc>-->
<!--                                <toclevels>3</toclevels>-->
<!--                                <numbered></numbered>-->
<!--                                <hardbreaks></hardbreaks>-->
<!--                                <sectlinks></sectlinks>-->
<!--                                <sectanchors></sectanchors>-->
<!--                                <pdf-fontsdir>${doc.base.style}/fonts</pdf-fontsdir>-->
<!--                                <pdf-stylesdir>${doc.base.style}/themes</pdf-stylesdir>-->
<!--                                <pdf-style>cn</pdf-style>-->
<!--                            </attributes>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>upload-html</id>
                        <phase>package</phase>
                        <goals>
                            <goal>upload-single</goal>
                        </goals>
                        <configuration>
                            <serverId>ibuild-qc</serverId>
                            <fromFile>${asciidoctor.html.output.directory}/${swagger.project.name}.html</fromFile>
                            <url>scp://root:yzw+1234@172.16.0.131/opt/ibuild-static/api-docs/html</url>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-pdf</id>
                        <phase>package</phase>
                        <goals>
                            <goal>upload-single</goal>
                        </goals>
                        <configuration>
                            <serverId>ibuild-qc</serverId>
                            <fromFile>${asciidoctor.pdf.output.directory}/${swagger.project.name}.pdf</fromFile>
                            <url>scp://root:yzw+1234@172.16.0.131/opt/ibuild-static/api-docs/pdf</url>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>